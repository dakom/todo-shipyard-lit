[config]
skip_core_tasks = true

##################
## Main Entries ##
##################

[tasks.build]
run_task = [
    {name = "build-development", condition = { profiles = [ "development"] } },
    {name = "build-production", condition = { profiles = [ "production"] } },
]

[tasks.serve]
dependencies = ["build-development"]
run_task = [{name = [
    "webpack-development-server",
    "rust-development-watcher"
], parallel = true}]

[tasks.test]
run_task = [{name = [
    "test-rust-unit",
    "test-interop",
]}]


#################
## Development ##
#################

[tasks.build-development]
run_task = [{name = [
    "compile-development", 
    "bindgen-development"
]}]

[tasks.compile-development]
command = "cargo"
args = ["build","--features","dev","--target","wasm32-unknown-unknown"]
toolchain = "nightly"
cwd = "rust"

[tasks.bindgen-development]
command = "wasm-bindgen"
args = ["./target/wasm32-unknown-unknown/debug/my_core.wasm","--debug", "--keep-debug", "--target","web","--out-dir","../_static/wasm/core/pkg"]
cwd = "rust"

##See: https://github.com/sagiegurari/cargo-make/issues/355
[tasks.webpack-development-server]
script = ["npx webpack-dev-server --config webpack.dev.js"]

#TODO - change to native watching (and just execute local task)
#depends on https://github.com/sagiegurari/cargo-make/issues/195
#also see https://github.com/sagiegurari/cargo-make/issues/350
[tasks.rust-development-watcher]
command = "watchexec"
args = ["-w", "./rust/src", "makers", "build-development"]

################
## Production ##
################

[tasks.build-production]
run_task = [{name = [
    "clean",
    "compile-production", 
    "bindgen-production",
    "wasmopt-production",
    "webpack-production",
    "copy-production"
]}]

[tasks.compile-production]
command = "cargo"
args = ["build","--release","--target","wasm32-unknown-unknown"]
toolchain = "nightly"
cwd = "rust"

[tasks.bindgen-production]
command = "wasm-bindgen"
args = ["./target/wasm32-unknown-unknown/release/my_core.wasm", "--target","web","--out-dir","../_static/wasm/core/pkg"]
cwd = "rust"

[tasks.wasmopt-production]
command = "wasm-opt"
# if CI fails, try with BINARYEN_CORES=1 in an env
args = ["-O3","-o","./_static/wasm/core/pkg/my_core_bg.wasm", "./_static/wasm/core/pkg/my_core_bg.wasm"]

[tasks.webpack-production]
script = ["npx webpack --progress --color --config webpack.release.js"]

[tasks.copy-production]
script_runner = "@shell"
script = ["cp -R ./_static/* ./dist/"]

############### 
#### Tests ####
###############

[tasks.test-rust-unit]
command = "cargo"
args = ["test"]
toolchain = "nightly"
cwd = "rust"

[tasks.build-test]
run_task = [{name = [
    "compile-test", 
    "bindgen-test",
]}]

[tasks.compile-test]
command = "cargo"
args = ["build","--features","ts_test","--target","wasm32-unknown-unknown"]
toolchain = "nightly"
cwd = "rust"

[tasks.bindgen-test]
command = "wasm-bindgen"
args = ["./target/wasm32-unknown-unknown/debug/my_core.wasm", "--target", "nodejs", "--out-dir", "../_static/wasm/core/pkg"]
cwd = "rust"

[tasks.test-interop]
dependencies = ["build-test"]
script = ["npx jest"]

############### 
#### Cleanup ##
###############

[tasks.clean]
script_runner = "@shell"
ignore_errors = true
script = [ 
    "rm -rf ./dist",
    "rm -rf ./_static/wasm/core/pkg",
    "rm -rf ./rust/target",
    "rm -rf ./rust/pkg"
]